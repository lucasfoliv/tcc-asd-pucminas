version: "3.9"

networks:
  gisa:
    name: gisa
    external: true

volumes:
  mongo_data:
    name: registry-volume

services:
  mongo:
    image: mongo
    container_name: micdb
    restart: unless-stopped
    ports:
      - "27017:27017"
    networks:
      gisa:
        ipv4_address: 172.1.0.11
    volumes:
      - mongo_data:/data/db
      - ./scripts/mongo:/docker-entrypoint-initdb.d
    environment:
      MONGO_INITDB_DATABASE: ${DB_NAME}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_ADMIN_AUTH_DATABASE: ${DB_AUTH}
      MONGO_ADMIN_PASSWORD: ${DB_SECRET}
      MONGO_ADMIN_USERNAME: ${DB_USER}
    logging:
      driver: json-file
  registry:
    image: registry:latest
    container_name: registry
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8085:8080"
    networks:
      gisa:
        ipv4_address: 172.1.0.12
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_AUTH: ${DB_AUTH}
      DB_USER: ${DB_USER}
      DB_SECRET: ${DB_SECRET}
      MIDDLEWARE_URL: ${MIDDLEWARE_URL}
      JWT_SIGNATURE_SECRET: ${JWT_SIGNATURE_SECRET}
      SERVER_PORT: ${SERVER_PORT}
      LOG_LEVEL: ${LOG_LEVEL}
    logging:
      driver: json-file
    depends_on:
      - mongo
